services:
  db:
    image: postgres:17-alpine
    container_name: postgres_db
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "127.0.0.1:5434:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./db/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - intranet

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api_backend
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8001:8000" 
    depends_on:
      db:
        condition: service_healthy
    networks:
      - traefik
      - intranet
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.pilisel-backend.loadbalancer.server.port=8000"
      - "traefik.http.routers.pilisel-backend.rule=Host(`projet.srairi.fr`) && PathPrefix(`/api/v1`)"
      - "traefik.http.routers.pilisel-backend.entrypoints=web,websecure"
      - "traefik.http.routers.pilisel-backend.tls=true"
      - "traefik.http.routers.pilisel-backend.tls.certresolver=myresolver"
      - "traefik.http.routers.pilisel-backend.priority=10"
      - "traefik.http.middlewares.pilisel-strip-apiv1.stripPrefix.prefixes=/api/v1"
      - "traefik.http.routers.pilisel-backend.middlewares=pilisel-strip-apiv1@docker"
      - "traefik.docker.network=traefik"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL}
    container_name: react_frontend
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "3000:80" 
    depends_on:
      - backend
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.pilisel-frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.pilisel-frontend.rule=Host(`projet.srairi.fr`) && PathPrefix(`/`)"
      - "traefik.http.routers.pilisel-frontend.entrypoints=web,websecure"
      - "traefik.http.routers.pilisel-frontend.tls=true"
      - "traefik.http.routers.pilisel-frontend.tls.certresolver=myresolver"
      - "traefik.http.routers.pilisel-frontend.priority=1"
      - "traefik.docker.network=traefik"

volumes:
  dbdata:
  minio_data:
networks:
  intranet:
    driver: bridge
  traefik:
    external: true
